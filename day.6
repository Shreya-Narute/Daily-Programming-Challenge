#include <stdio.h>
#include <stdlib.h>

// Structure to store prefix sum and index
typedef struct {
    int sum;
    int index;
} Prefix;

// Function to find all subarrays with zero sum
void findZeroSumSubarrays(int arr[], int n) {
    int prefixSum = 0;
    Prefix prefix[n * n]; // store prefix sums
    int count = 0;

    for (int i = 0; i < n; i++) {
        prefixSum += arr[i];

        // Case 1: Subarray from 0 to i
        if (prefixSum == 0) {
            printf("(%d, %d)\n", 0, i);
        }

        // Case 2: Subarray between previous same prefix sum
        for (int j = 0; j < count; j++) {
            if (prefix[j].sum == prefixSum) {
                printf("(%d, %d)\n", prefix[j].index + 1, i);
            }
        }

        // Store prefix sum with index
        prefix[count].sum = prefixSum;
        prefix[count].index = i;
        count++;
    }
}

// Driver code
int main() {
    int arr[] = {1, 2, -3, 3, -1, 2};
    int n = sizeof(arr) / sizeof(arr[0]);

    printf("Subarrays with zero sum:\n");
    findZeroSumSubarrays(arr, n);

    return 0;
}
